version: "3.7"

services:
 # Assume that the server image was already built
 server: 
  build: ./server
  hostname: server
  container_name: server
  image: server
  env_file: ./server/.env
  command: "node app.js"
  ports:
   - 5050:5050
  depends_on:
   - mongo-seed
  networks:
   - wacc

 ui: 
  build: ./ui
  hostname: ui
  container_name: ui
  image: ui
  env_file: ./ui/.env
  command: "nginx -g 'daemon off;'"
  ports:
   - 8080:80
  networks:
   - wacc

 mongo-seed:
  container_name: mongo-seed
  image: mongo:latest
  environment:
   # Dummy log in credentials
    MONGO_INITDB_DATABASE: wacc
    MONGO_INITDB_ROOT_USERNAME: root
    MONGO_INITDB_ROOT_PASSWORD: rootpass
  command: "--bind_ip_all --replSet rs0"
  ports:
   - 27017:27017
  volumes:
   - mongodb-seed-data:/data/db
   - mongo-schema:/schema
   - mongo-mock-data:/mock-data
  networks:
   - wacc

 mongo-1:
  container_name: mongo-1
  image: mongo:latest
  command: "--bind_ip_all --replSet rs0"
  ports:
   - 27011:27017
  volumes:
   - mongodb-1-data:/data/db
  networks:
   - wacc

 mongo-2:
  container_name: mongo-2
  image: mongo:latest
  command: "--bind_ip_all --replSet rs0"
  volumes:
   - mongodb-2-data:/data/db
  ports:
   - 27012:27017
  networks:
   - wacc

 cassandra-seed:
  image: cassandra:latest
  container_name: cassandra-seed
  environment:
   CASSANDRA_BROADCAST_ADDRESS: cassandra-seed
   ## By default, Cassandra autodetects the available host memory and takes as much as it can.
   ## Therefore, memory options are mandatory if multiple Cassandras are launched in the same node.
   MAX_HEAP_SIZE: 500M
   HEAP_NEWSIZE: 100M
  volumes:
   - cassandra-data-seed:/var/lib/cassandra
  ports:
   - 9042:9042 # cqlsh
   - 7199:7199 # jmx
   - 7000:7000 # internode communcation
   - 7001:7001 # tls internode
   - 9160:9160 # client api
  networks:
   - wacc

 cassandra-1:
  image: cassandra:latest
  container_name: cassandra-1
  environment:
   CASSANDRA_BROADCAST_ADDRESS: cassandra-1
   CASSANDRA_SEEDS: cassandra-seed
   ## By default, Cassandra autodetects the available host memory and takes as much as it can.
   ## Therefore, memory options are mandatory if multiple Cassandras are launched in the same node.
   MAX_HEAP_SIZE: 500M
   HEAP_NEWSIZE: 100M
  volumes:
   - cassandra-data-1:/var/lib/cassandra
  depends_on:
   - cassandra-seed
  networks:
   - wacc

 cassandra-2:
  image: cassandra:latest
  container_name: cassandra-2
  environment:
   CASSANDRA_BROADCAST_ADDRESS: cassandra-2
   CASSANDRA_SEEDS: cassandra-seed
   ## By default, Cassandra autodetects the available host memory and takes as much as it can.
   ## Therefore, memory options are mandatory if multiple Cassandras are launched in the same node.
   MAX_HEAP_SIZE: 500M
   HEAP_NEWSIZE: 100M
  volumes:
   - cassandra-data-2:/var/lib/cassandra
  depends_on:
   - cassandra-seed
  networks:
   - wacc

 cqlsh:
  image: cassandra:latest
  container_name: cqlsh
  entrypoint: cqlsh cassandra-seed
  volumes:
   - cassandra-schema:/schema
   - cassandra-historical-data:/historical-data
  depends_on:
   - cassandra-seed
  networks:
   - wacc

 zookeeper:
  image: wurstmeister/zookeeper
  container_name: zookeeper
  hostname: zookeeper
  ports:
   - 2181:2181
  networks:
   - wacc

 kafka:
  image: wurstmeister/kafka
  container_name: kafka
  environment:
   KAFKA_ADVERTISED_HOST_NAME: kafka
   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
   KAFKA_LISTENERS: OUTSIDE://kafka:9092,INSIDE://localhost:9093
   KAFKA_ADVERTISED_LISTENERS: OUTSIDE://kafka:9092,INSIDE://localhost:9093
   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: OUTSIDE:PLAINTEXT,INSIDE:PLAINTEXT
   KAFKA_INTER_BROKER_LISTENER_NAME: OUTSIDE
   KAFKA_CREATE_TOPICS: "cars:1:1"
  ports:
   - 9092
  volumes:
   - kafka-offset:/opt/kafka/offset
  networks:
   - wacc
  depends_on:
   - zookeeper

 redis-server:
  image: redis:alpine
  container_name: redis-server
  command: redis-server /usr/local/etc/redis/wacc/redis.conf
  ports:
   - 6379:6379
  volumes:
   - redis-data:/var/lib/redis
   - redis-conf:/usr/local/etc/redis/wacc
  environment:
    - REDIS_REPLICATION_MODE=master
  networks:
    - wacc
  depends_on:
    - zookeeper

 redis-client:
  image: redis:alpine
  container_name: redis-client
  command: redis-cli -h redis-server
  networks:
    - wacc
  depends_on:
    - zookeeper

volumes:
 mongo-schema:
  external: true
 mongo-mock-data:
  external: true
 mongodb-seed-data:
  external: true
 mongodb-1-data:
  external: true
 mongodb-2-data:
  external: true
 cassandra-schema:
  external: true
 cassandra-data-seed:
  external: true
 cassandra-data-2:
  external: true
 cassandra-data-1:
  external: true
 cassandra-historical-data:
  external: true
 kafka-offset:
  external: true
 redis-data:
  external: true
 redis-conf:
  external: true

networks:
 wacc:
  name: wacc-network
